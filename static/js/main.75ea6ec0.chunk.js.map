{"version":3,"sources":["Component/Heading/Heading.jsx","Component/Input/Input.jsx","App.js","index.js"],"names":["Heading","NewLocalDate","Date","toLocaleDateString","className","Input","todo","useState","todoList","setToDoList","value","setValue","completed","e","chosenText","target","innerHTML","index","indexOf","splice","style","display","Text","props","onClick","list","map","type","placeholder","onChange","event","push","App","rootElement","document","getElementById","createRoot","render"],"mappings":"kNAaeA,EAXC,WACd,IACMC,GADU,IAAIC,MACSC,qBAE7B,OACE,qBAAKC,UAAU,UAAS,SACtB,oBAAIA,UAAU,cAAa,SAAEH,KAGnC,E,OC0DeI,G,MAlED,WACZ,IAAIC,EAAO,CACT,uBACA,oBACA,yDACA,oCAGF,EAAgCC,mBAASD,GAAK,mBAAvCE,EAAQ,KAAEC,EAAW,KAE5B,EAA0BF,mBAAS,IAAG,mBAA/BG,EAAK,KAAEC,EAAQ,KAMhBC,EAAY,SAACC,GACjB,IAAMC,EAAaD,EAAEE,OAAOC,UACxBC,EAAQX,EAAKY,QAAQJ,GACrBG,GAAS,GAEXX,EAAKa,OAAOF,EAAO,GAGrBJ,EAAEE,OAAOK,MAAMC,QAAU,MAC3B,EAEMC,EAAO,SAACC,GACZ,OACE,qBAAKnB,UAAU,WAAWoB,QAASZ,EAAU,SAE3C,6BAAKW,EAAME,QAGjB,EAQA,OACE,gCACE,qBAAKrB,UAAU,cAAa,SAC1B,6BACGI,EAASkB,KAAI,SAACpB,GACb,OAAO,cAACgB,EAAI,CAACG,KAAMnB,GACrB,QAGJ,sBAAKF,UAAU,YAAW,UACxB,uBACEuB,KAAK,OACLC,YAAY,kBACZlB,MAAOA,EACPmB,SA5CW,SAACC,GAClBnB,EAASmB,EAAMf,OAAOL,MACxB,IA4CM,wBAAQiB,KAAK,SAASH,QAtBV,WAChBhB,EAASuB,KAAKrB,GACdD,EAAYD,GACZG,EAAS,GACX,EAkB+C,SAAC,WAMlD,GC7De,SAASqB,IACtB,OACE,sBAAK5B,UAAU,MAAK,UAClB,cAAC,EAAO,IACR,cAAC,EAAK,MAGZ,CCNA,IAAM6B,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAGnBI,OAAO,cAACL,EAAG,I","file":"static/js/main.75ea6ec0.chunk.js","sourcesContent":["import \"./Heading.css\"; // importing styles\r\n\r\nconst Heading = () => {\r\n  const NewDate = new Date();\r\n  const NewLocalDate = NewDate.toLocaleDateString();\r\n\r\n  return (\r\n    <div className=\"Heading\">\r\n      <h1 className=\"HeadingTime\">{NewLocalDate}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import React, { useState } from \"react\";\r\nimport \"./Input.css\";\r\n\r\nconst Input = () => {\r\n  let todo = [\r\n    \"Welcome ðŸ‘‹\",\r\n    \"Have a good day!!\",\r\n    \"once app closed/refreshed your added task is deleted!!\",\r\n    \"Click on text to remove the task\"\r\n  ];\r\n\r\n  const [todoList, setToDoList] = useState(todo);\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const InputValue = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const completed = (e) => {\r\n    const chosenText = e.target.innerHTML;\r\n    let index = todo.indexOf(chosenText);\r\n    if (index > -1) {\r\n      // only splice array when item is found\r\n      todo.splice(index, 1); // 2nd parameter means remove one item only\r\n    }\r\n\r\n    e.target.style.display = \"none\";\r\n  };\r\n\r\n  const Text = (props) => {\r\n    return (\r\n      <div className=\"listTask\" onClick={completed}>\r\n        {/* <input type=\"checkbox\" name=\"\" id=\"\" /> */}\r\n        <li>{props.list}</li>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const DataInput = () => {\r\n    todoList.push(value);\r\n    setToDoList(todoList);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"listDisplay\">\r\n        <ul>\r\n          {todoList.map((todo) => {\r\n            return <Text list={todo} />;\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <div className=\"toDoInput\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a new to do\"\r\n          value={value}\r\n          onChange={InputValue}\r\n        />\r\n        <button type=\"submit\" onClick={DataInput}>\r\n          +\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import \"./styles.css\";\n\n// importing components\nimport Heading from \"./Component/Heading/Heading\";\nimport Input from \"./Component/Input/Input\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Heading />\n      <Input />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\n// importing component\nimport App from \"./App\";\n\n// defining root\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\n// rendering\nroot.render(<App />);\n"],"sourceRoot":""}